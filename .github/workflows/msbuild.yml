name: MSBuild

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  # Path to the solution file relative to the root of the project.
  SOLUTION_FILE_PATH: mfcDuDownloadCodeGenerator.sln
  BUILD_CONFIGURATION: Release

permissions:
  contents: read

jobs:
  build:
    strategy:
      matrix:
        build_config:
          - vs2019_ci_dynamic
          - vs2019_ci_static_xp
          - vs2022_ci_static

        include:
          - build_config: vs2019_ci_dynamic
            os: windows-2019
            platform: x64
            toolset: v142
            suffix: 'vs2019'
          - build_config: vs2019_ci_static_xp
            os: windows-2019
            platform: x86
            toolset: v141_xp
            suffix: 'vs2019.xp.x86'
            static: 'true'
          - build_config: vs2022_ci_static
            os: windows-2022
            platform: x64
            toolset: v143
            static: 'true'
            suffix: 'vs2022.static'

    runs-on: "${{ matrix.os }}"

    steps:
    - name: üõéÔ∏è checkout
      uses: actions/checkout@v3

    - name: üè≠ prepare MSBuild
      uses: microsoft/setup-msbuild@v1.0.2

    - name: üè≠ prepare msys2
      uses: msys2/setup-msys2@v2
      with:
        update: true
        install: >-
          git
          upx
          zip

    - name: üîß build
      working-directory: ${{env.GITHUB_WORKSPACE}}
      # Add additional options to the MSBuild command line here (like platform or verbosity level).
      # See https://docs.microsoft.com/visualstudio/msbuild/msbuild-command-line-reference
      run: |
        if ("${{ matrix.static }}" -eq "true") {
          $env:_CL_ += ' /MT'
          $MFC_VER = 'Static'
        } else {
          $env:_CL_ += ' /MD'
          $MFC_VER = 'Dynamic'
        }
        msbuild /m `
          /p:Configuration=${{ env.BUILD_CONFIGURATION }} `
          /p:Platform=${{ matrix.platform }} `
          /p:PlatformToolset=${{ matrix.toolset }} `
          /p:UseOfMfc=$MFC_VER `
          ${{env.SOLUTION_FILE_PATH}}

    - name: üóúÔ∏è rename + optional upx
      shell: msys2 {0}
      run: |
        cd "${{ matrix.platform }}/${{ env.BUILD_CONFIGURATION }}"
        mv ducode.exe "ducode.${{ matrix.suffix }}.exe"

        if [ "${{ matrix.static }}" == "true" ]; then
          upx -9 *.exe
        fi

    - name: üóúÔ∏è archive binaries
      uses: actions/upload-artifact@v3
      with:
        name: binaries
        path: ${{ matrix.platform }}/${{ env.BUILD_CONFIGURATION }}/*.exe

    - name: üì¶ package for release
      shell: msys2 {0}
      run: |
        cd "${{ matrix.platform }}/${{ env.BUILD_CONFIGURATION }}"
        zip -9 "../../ducode.${{ matrix.vs_version }}.$(git describe --abbrev=0).zip" *.exe

    - name: üìù draft release
      if: startsWith(github.ref, 'refs/tags/v')
      uses: softprops/action-gh-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        body: "<to be filled>"
        draft: true
        # note you'll typically need to create a personal access token
        # with permissions to create releases in the other repo
        token: ${{ secrets.CUSTOM_GITHUB_TOKEN }}
        files: |
          *.zip
